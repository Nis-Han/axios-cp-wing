// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: user_verification.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createUserVerification = `-- name: CreateUserVerification :one
WITH deleted_rows AS (
    DELETE FROM user_verification
    WHERE user_id = $1
    RETURNING id, user_id, created_at, valid_till, verification_key
)
INSERT INTO user_verification (
    id,
    user_id,
    created_at,
    valid_till,
    verification_key
) VALUES (
    uuid_generate_v4(),
    $1,
    current_timestamp,
    current_timestamp + interval '1 day',
    encode(gen_random_bytes(32), 'hex')
) RETURNING id, user_id, created_at, valid_till, verification_key
`

func (q *Queries) CreateUserVerification(ctx context.Context, userID uuid.UUID) (UserVerification, error) {
	row := q.db.QueryRowContext(ctx, createUserVerification, userID)
	var i UserVerification
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.CreatedAt,
		&i.ValidTill,
		&i.VerificationKey,
	)
	return i, err
}
